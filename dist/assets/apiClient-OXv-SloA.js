const g="http://localhost:3001/api";const h=()=>{try{return localStorage.getItem("authToken")||sessionStorage.getItem("authToken")}catch(e){return console.error("Error accessing storage for auth token:",e),null}};async function n(e,s={}){const a=e.startsWith("http")?e:`${g}${e.startsWith("/")?e:`/${e}`}`,u=h(),i={"Content-Type":"application/json",...u?{Authorization:`Bearer ${u}`}:{},...s.headers};try{const t=await fetch(a,{...s,headers:i}),l=t.clone();if(!t.ok)try{const o=t.headers.get("content-type");if(o&&o.includes("application/json")){const r=await t.json();return{success:!1,error:{message:r.error||r.message||"API request failed",code:r.code||String(t.status),status:t.status,details:r.details||r}}}else return{success:!1,error:{message:await t.text()||"API request failed with non-JSON response",code:String(t.status),status:t.status}}}catch{return{success:!1,error:{message:`API request failed: ${t.status} ${t.statusText}`,code:String(t.status),status:t.status}}}try{if(t.status===204)return{success:!0};const o=t.headers.get("content-type");return o&&o.includes("application/json")?{success:!0,data:await t.json()}:{success:!0,data:await t.text()}}catch{try{const r=await l.text()}catch{}return{success:!1,error:{message:"Failed to parse API response",code:"PARSE_ERROR"}}}}catch(t){return{success:!1,error:{message:t instanceof Error?t.message:"Unknown API error",code:"CLIENT_ERROR"}}}}const c={get:(e,s={})=>n(e,{...s,method:"GET"}),post:(e,s,a={})=>n(e,{...a,method:"POST",body:JSON.stringify(s)}),put:(e,s,a={})=>n(e,{...a,method:"PUT",body:JSON.stringify(s)}),patch:(e,s,a={})=>n(e,{...a,method:"PATCH",body:JSON.stringify(s)}),delete:(e,s={})=>n(e,{...s,method:"DELETE"})},f={login:(e,s)=>c.post("/auth/login",{email:e,password:s}),verifyToken:e=>c.post("/auth/verify-token",{token:e}),logout:()=>c.post("/auth/logout",{})};export{c as api,f as authApi,c as default};
